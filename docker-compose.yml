services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: gazzette-db
    volumes:
      # - strapi-data:/var/lib/postgresql/data/ #using a volume
      - ./pg_data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    build: .
    command: celery -A app.utils worker --loglevel=info
    restart: unless-stopped
    volumes:
      - .:/code
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  celery_beat:
    build: .
    command: celery -A app.utils beat --loglevel=info
    restart: unless-stopped
    volumes:
      - .:/code
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

volumes:
  redis_data:
